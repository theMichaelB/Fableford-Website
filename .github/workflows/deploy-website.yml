name: Build Hugo and Deploy to Google Cloud Storage

on:
  push:
    branches:
      - main # Or your main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Hugo site
        run: |
          cd hugo/fableford
          hugo --minify

      - name: Copy Hugo output to public directory
        run: |
          # Create public directory if it doesn't exist
          mkdir -p public
          
          # Remove any existing content in public directory
          rm -rf public/*
          
          # Copy Hugo-generated content to public directory
          cp -r hugo/fableford/public/* public/
          
          # Output for logging
          echo "Copied Hugo build output to public directory"
          ls -la public/

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: fableford

      - name: Apply cache busting
        run: |
          # Generate a version string using timestamp and short commit hash
          VERSION=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::7}
          
          # Replace VERSION_PLACEHOLDER in HTML files
          find public -type f -name "*.html" -exec sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" {} \;
          
          # Optional: Output the version for logging purposes
          echo "Applied version: $VERSION"

      - name: Set Cache-Control metadata
        run: |
          # Create a file with Cache-Control metadata settings
          cat > cache-control-metadata.txt << EOF
          public/index.html=Cache-Control:no-cache,max-age=0
          public/assets/css/*=Cache-Control:public,max-age=31536000
          public/assets/js/*=Cache-Control:public,max-age=31536000
          public/assets/images/*=Cache-Control:public,max-age=31536000
          EOF

      - name: Deploy to GCS with CDN configuration
        run: |
          # Remove existing files
          gsutil -m rm -r gs://${{ vars.GCS_BUCKET_NAME }}/** || true
          
          # Copy HTML files with no-cache headers
          gsutil -h "Cache-Control:no-cache,max-age=0" -m cp public/*.html gs://${{ vars.GCS_BUCKET_NAME }}/
          
          # Copy CSS, JS, and images with long cache times (1 year)
          gsutil -h "Cache-Control:public,max-age=31536000" -m cp -r public/assets gs://${{ vars.GCS_BUCKET_NAME }}/assets

          
          # Optional: Explicitly invalidate cache via Cloud CDN if you're using it
          # gcloud compute url-maps invalidate-cdn-cache YOUR_URL_MAP --path "/*"